version: "3.6"

services:
  postgres:
    hostname: postgres
    container_name: postgres
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    env_file:
      - ./backend/src/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - "5433:5432"
  api:
    hostname: api
    container_name: "api"
    build:
      context: .
    command: bash -c "python -m aiohttp.web -H localhost -P 8080 src.main:init_func"

    depends_on:
      - postgres
    ports:
      # - 443:443
      - 8080:8080

    restart: unless-stopped

  
  # rabbitmq:
  #   image: rabbitmq:3.10.7-management
  # hostname: rabbitmq
  # environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=admin
  # - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
  # volumes:
  # - ./rabbitmq:/var/lib/rabbitmq

  # restart: always
  #   ports:
  #     - 5672:5672

volumes:
  postgres_data: